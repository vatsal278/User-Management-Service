// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/vatsal278/UserManagementService/internal/logic (interfaces: UserManagementServiceLogicIer)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	model "github.com/PereRohit/util/model"
	gomock "github.com/golang/mock/gomock"
	model0 "github.com/vatsal278/UserManagementService/internal/model"
)

// MockUserManagementServiceLogicIer is a mock of UserManagementServiceLogicIer interface.
type MockUserManagementServiceLogicIer struct {
	ctrl     *gomock.Controller
	recorder *MockUserManagementServiceLogicIerMockRecorder
}

// MockUserManagementServiceLogicIerMockRecorder is the mock recorder for MockUserManagementServiceLogicIer.
type MockUserManagementServiceLogicIerMockRecorder struct {
	mock *MockUserManagementServiceLogicIer
}

// NewMockUserManagementServiceLogicIer creates a new mock instance.
func NewMockUserManagementServiceLogicIer(ctrl *gomock.Controller) *MockUserManagementServiceLogicIer {
	mock := &MockUserManagementServiceLogicIer{ctrl: ctrl}
	mock.recorder = &MockUserManagementServiceLogicIerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserManagementServiceLogicIer) EXPECT() *MockUserManagementServiceLogicIerMockRecorder {
	return m.recorder
}

// HealthCheck mocks base method.
func (m *MockUserManagementServiceLogicIer) HealthCheck() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HealthCheck")
	ret0, _ := ret[0].(bool)
	return ret0
}

// HealthCheck indicates an expected call of HealthCheck.
func (mr *MockUserManagementServiceLogicIerMockRecorder) HealthCheck() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HealthCheck", reflect.TypeOf((*MockUserManagementServiceLogicIer)(nil).HealthCheck))
}

// Ping mocks base method.
func (m *MockUserManagementServiceLogicIer) Ping(arg0 *model0.PingRequest) *model.Response {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping", arg0)
	ret0, _ := ret[0].(*model.Response)
	return ret0
}

// Ping indicates an expected call of Ping.
func (mr *MockUserManagementServiceLogicIerMockRecorder) Ping(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockUserManagementServiceLogicIer)(nil).Ping), arg0)
}
